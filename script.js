// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–æ–≤
const launchScreen = document.getElementById('launchScreen');
const step1Screen = document.getElementById('step1Screen');
const flashOverlay = document.getElementById('flashOverlay');
const btnStart = document.querySelector('.btn-start');
const step2Screen = document.getElementById('step2Screen');
const step3Screen = document.getElementById('step3Screen');

btnStart.addEventListener('click', () => {
  // –í—Å–ø—ã—à–∫–∞
  flashOverlay.classList.add('active');

  setTimeout(() => {
    launchScreen.style.display = 'none';
    step1Screen.style.display = 'flex';
    flashOverlay.classList.remove('active');
  }, 200);
});

// –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
const nameInput = document.getElementById('nameInput');
const birthInput = document.getElementById('birthInput');
const genderSelect = document.getElementById('genderSelect');
const zodiacSign = document.getElementById('zodiacSign');
const pathSelect = document.getElementById('pathSelect');
const pathDescription = document.getElementById('pathDescription');
const mentorSelect = document.getElementById('mentorSelect');
const mentorImage = document.getElementById('mentorImage');

// –û–ø–∏—Å–∞–Ω–∏—è –¥—É—Ö–æ–≤–Ω—ã—Ö –ø—É—Ç–µ–π
const pathDescriptions = {
  'tanakh': '–ï–≤—Ä–µ–π—Å–∫–∞—è –ë–∏–±–ª–∏—è ‚Äî —É—Ä–æ–∫–∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏ –∏ –º–∏–ª–æ—Å–µ—Ä–¥–∏—è —á–µ—Ä–µ–∑ –ø—Ä–∏—Ç—á–∏ –∏ –∑–∞–∫–æ–Ω—ã.',
  'vedas': '–ò–Ω–¥–∏–π—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã ‚Äî –º–∞–Ω—Ç—Ä—ã –∏ –π–æ–≥–∞ –¥–ª—è –≥–∞—Ä–º–æ–Ω–∏–∏ —Ç–µ–ª–∞ –∏ –¥—É—Ö–∞.',
  'shamanism': '–ü—É—Ç—ë–≤–∫–∏ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –¥—É—Ö–æ–≤ –∏ –æ–±—Ä—è–¥—ã –¥–ª—è —Å–≤—è–∑–∏ —Å —ç–Ω–µ—Ä–≥–∏–µ–π –ó–µ–º–ª–∏.',
  'bible': '–•—Ä–∏—Å—Ç–∏–∞–Ω—Å–∫–∞—è –ë–∏–±–ª–∏—è ‚Äî —Å–æ–±—Ä–∞–Ω–∏–µ –í–µ—Ç—Ö–æ–≥–æ –∏ –ù–æ–≤–æ–≥–æ –ó–∞–≤–µ—Ç–æ–≤ –æ –≤–µ—Ä–µ, –ª—é–±–≤–∏ –∏ —Å–ø–∞—Å–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ –ø—Ä–∏—Ç—á–∏ –∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏—è.',
  'quran': '–ö–æ—Ä–∞–Ω ‚Äî —Å–≤—è—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏—Å–ª–∞–º–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏—è –ü—Ä–æ—Ä–æ–∫–∞ –ú—É—Ö–∞–º–º–µ–¥–∞ –æ –µ–¥–∏–Ω–æ–±–æ–∂–∏–∏ –∏ –º–æ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç–∞–≤–ª–µ–Ω–∏—è—Ö.',
  'buddhism': '–ë—É–¥–¥–∏–∑–º ‚Äî —É—á–µ–Ω–∏–µ –æ —á–µ—Ç—ã—Ä–µ—Ö –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã—Ö –∏—Å—Ç–∏–Ω–∞—Ö –∏ –≤–æ—Å—å–º–µ—Ä–∏—á–Ω–æ–º –ø—É—Ç–∏ –∫ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏—é –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—é –æ—Ç —Å—Ç—Ä–∞–¥–∞–Ω–∏–π.',
  'hinduism': '–ò–Ω–¥—É–∏–∑–º ‚Äî —Å–ª–æ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–æ–≤–∞–Ω–∏–π –∏ –ø—Ä–∞–∫—Ç–∏–∫, –≤–∫–ª—é—á–∞—é—â–∞—è –¥—Ö–∞—Ä–º—É, –∫–∞—Ä–º—É, –π–æ–≥—É –∏ –ø–æ—á–∏—Ç–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –±–æ–∂–µ—Å—Ç–≤.',
  'judaism': '–ò—É–¥–∞–∏–∑–º ‚Äî —Ä–µ–ª–∏–≥–∏—è –µ–≤—Ä–µ–π—Å–∫–æ–≥–æ –Ω–∞—Ä–æ–¥–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –¢–æ—Ä–µ –∏ —É—Å—Ç–Ω–æ–π —Ç—Ä–∞–¥–∏—Ü–∏–∏, –ø—Ä–∏–∑—ã–≤–∞—é—â–∞—è –∫ —Å–æ–±–ª—é–¥–µ–Ω–∏—é –∑–∞–ø–æ–≤–µ–¥–µ–π –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏.'
}

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
function getZodiacSign(dateString) {
  const date = new Date(dateString);
  const month = date.getMonth() + 1;
  const day = date.getDate();

  const signs = [
    { name: '–ö–æ–∑–µ—Ä–æ–≥ ‚ôë', start: [12, 22], end: [1, 19] },
    { name: '–í–æ–¥–æ–ª–µ–π ‚ôí', start: [1, 20], end: [2, 18] },
    { name: '–†—ã–±—ã ‚ôì', start: [2, 19], end: [3, 20] },
    { name: '–û–≤–µ–Ω ‚ôà', start: [3, 21], end: [4, 19] },
    { name: '–¢–µ–ª–µ—Ü ‚ôâ', start: [4, 20], end: [5, 20] },
    { name: '–ë–ª–∏–∑–Ω–µ—Ü—ã ‚ôä', start: [5, 21], end: [6, 20] },
    { name: '–†–∞–∫ ‚ôã', start: [6, 21], end: [7, 22] },
    { name: '–õ–µ–≤ ‚ôå', start: [7, 23], end: [8, 22] },
    { name: '–î–µ–≤–∞ ‚ôç', start: [8, 23], end: [9, 22] },
    { name: '–í–µ—Å—ã ‚ôé', start: [9, 23], end: [10, 22] },
    { name: '–°–∫–æ—Ä–ø–∏–æ–Ω ‚ôè', start: [10, 23], end: [11, 21] },
    { name: '–°—Ç—Ä–µ–ª–µ—Ü ‚ôê', start: [11, 22], end: [12, 21] }
  ];

  for (let sign of signs) {
    if (sign.name === '–ö–æ–∑–µ—Ä–æ–≥ ‚ôë') {
      if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) {
        return sign.name;
      }
    } else {
      if ((month === sign.start[0] && day >= sign.start[1]) ||
        (month === sign.end[0] && day <= sign.end[1])) {
        return sign.name;
      }
    }
  }
  return '-';
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞—Ç—ã
birthInput.addEventListener('change', () => {
  const sign = getZodiacSign(birthInput.value);
  zodiacSign.textContent = `‚öù –í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏a–∫a: ${sign}`;
  zodiacSign.classList.add('show');
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
const initialSign = getZodiacSign(birthInput.value);
zodiacSign.textContent = `‚öù –í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: ${initialSign}`;
zodiacSign.classList.add('show');

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—ã–±–æ—Ä–∞
pathSelect.addEventListener('change', () => {
  const path = pathDescriptions[pathSelect.value] || '-';
  pathDescription.innerHTML = `üîÆ –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –¥—É—Ö–æ–≤–Ω—ã–π –ø—É—Ç—å:<br>${path}`;
  pathDescription.classList.add('show');
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—É—Ö–æ–≤–Ω–æ–≥–æ –ø—É—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
const initialPath = pathDescriptions[pathSelect.value] || '-';
pathDescription.innerHTML = `üîÆ –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –¥—É—Ö–æ–≤–Ω—ã–π –ø—É—Ç—å:<br>${initialPath}`;
pathDescription.classList.add('show');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
const initialMentor = mentorSelect.value || '-';

if (initialMentor == '-') {
  mentorImage.style.display = 'none';
} else {
  mentorImage.style.display = 'block';
  mentorImage.style.opacity = '0';
  mentorImage.style.transform = 'scale(0.95)';
  mentorImage.style.filter = 'blur(8px)';
  mentorImage.style.transition = 'opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1), transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1), filter 0.6s cubic-bezier(0.4, 0, 0.2, 1)';

  setTimeout(() => {
    mentorImage.style.backgroundImage = `url(img/${initialMentor}.png)`;
    mentorImage.style.opacity = '1';
    mentorImage.style.transform = 'scale(1)';
    mentorImage.style.filter = 'blur(0)';
    mentorImage.style.transition = 'opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1), transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1), filter 0.6s cubic-bezier(0.4, 0, 0.2, 1)';
  }, 300);
}

mentorSelect.addEventListener('change', () => {
  const mentor = mentorSelect.value || '-';
  if (mentor == '-') {
    mentorImage.style.display = 'none';
  } else {
    mentorImage.style.display = 'block';
    mentorImage.style.opacity = '0';
    mentorImage.style.transform = 'scale(0.95)';
    mentorImage.style.filter = 'blur(8px)';
    mentorImage.style.transition = 'opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1), transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1), filter 0.6s cubic-bezier(0.4, 0, 0.2, 1)';

    setTimeout(() => {
      mentorImage.style.backgroundImage = `url(img/${mentor}.png)`;
      mentorImage.style.opacity = '1';
      mentorImage.style.transform = 'scale(1)';
      mentorImage.style.filter = 'blur(0)';
      mentorImage.style.transition = 'opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1), transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1), filter 0.6s cubic-bezier(0.4, 0, 0.2, 1)';
    }, 300);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–∞–ª–µ–µ"
document.getElementById('nextBtn').addEventListener('click', () => {
  step1Screen.style.opacity = '0';
  step1Screen.style.filter = 'blur(8px)';
  step1Screen.style.transition = 'opacity 0.5s ease, filter 0.5s ease';
  
  setTimeout(() => {
    step1Screen.style.display = 'none';
    step2Screen.style.display = 'flex';
    step2Screen.style.opacity = '0';
    step2Screen.style.filter = 'blur(8px)';
    
    requestAnimationFrame(() => {
      step2Screen.style.opacity = '1';
      step2Screen.style.filter = 'blur(0)';
      step2Screen.style.transition = 'opacity 0.5s ease, filter 0.5s ease';
    });
  }, 500);
});

document.getElementById('nextBtn2').addEventListener('click', () => {
  step2Screen.style.opacity = '0';
  step2Screen.style.filter = 'blur(8px)';
  step2Screen.style.transition = 'opacity 0.5s ease, filter 0.5s ease';
  
  setTimeout(() => {
    step2Screen.style.display = 'none';
    step3Screen.style.display = 'flex';
    step3Screen.style.opacity = '0';
    step3Screen.style.filter = 'blur(8px)';
    
    requestAnimationFrame(() => {
      step3Screen.style.opacity = '1';
      step3Screen.style.filter = 'blur(0)';
      step3Screen.style.transition = 'opacity 0.5s ease, filter 0.5s ease';
    });
  }, 500);
});

// –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
// function playAmbientSound() {
//   try {
//     const audioContext = new (window.AudioContext || window.webkitAudioContext)();

//     // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–≤–æ–Ω –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∞
//     function createBell() {
//       const oscillator = audioContext.createOscillator();
//       const gainNode = audioContext.createGain();

//       oscillator.connect(gainNode);
//       gainNode.connect(audioContext.destination);

//       oscillator.frequency.setValueAtTime(800, audioContext.currentTime);
//       oscillator.frequency.exponentialRampToValueAtTime(400, audioContext.currentTime + 0.5);

//       gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);
//       gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 1);

//       oscillator.start(audioContext.currentTime);
//       oscillator.stop(audioContext.currentTime + 1);
//     }

//     btnStart.addEventListener('click', () => {
//       createBell();
//     });

//   } catch (e) {
//     // –ó–≤—É–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
//     console.log('Web Audio API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
//   }
// }

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤—É–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
document.addEventListener('click', playAmbientSound, { once: true });
